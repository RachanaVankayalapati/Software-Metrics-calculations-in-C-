//spearmans:

//source code:
#include <iostream>
#include <vector>
#include <cmath>
using namespace std;
typedef vector<float> Vector;
void printVector(const Vector &X)
{
for (auto i: X)
cout << i << " ";
cout << endl;
}
Vector rankify(Vector & X) {
int N = X.size();
Vector Rank_X(N);
for(int i = 0; i < N; i++)
{
int r = 1, s = 1;
for(int j = 0; j < i; j++) {
if (X[j] < X[i] ) r++;
if (X[j] == X[i] ) s++;
}
for (int j = i+1; j < N; j++) {
if (X[j] < X[i] ) r++;
if (X[j] == X[i] ) s++;
}
Rank_X[i] = r + (s-1) * 0.5;
}
return Rank_X;
}
float correlationCoefficient (Vector &X, Vector &Y)
{
int n = X.size();
float sum_X = 0, sum_Y = 0,sum_XY = 0;
float squareSum_X = 0,squareSum_Y = 0;
for (int i = 0; i < n; i++)
{
sum_X = sum_X + X[i];
sum_Y = sum_Y + Y[i];
sum_XY = sum_XY + X[i] * Y[i];
squareSum_X = squareSum_X +X[i] * X[i];
squareSum_Y = squareSum_Y +Y[i] * Y[i];
}
float corr = (float)(n * sum_XY - sum_X * sum_Y) / sqrt((n * squareSum_X - sum_X * sum_X) * (n * squareSum_Y -sum_Y * sum_Y));
return corr;
}
int main()
{
Vector X = {15,18,21, 15, 21};
Vector Y= {25,25,27,27,27};
Vector rank_x = rankify(X);
Vector rank_y = rankify(Y);
cout << "Vector X" << endl;
printVector(X);
cout << "Rankings of X" << endl;
printVector(rank_x);
cout << "Vector Y" << endl;
printVector(Y);
cout << "Rankings of Y" << endl;
printVector(rank_y);
cout << "Spearman's Rank correlation: "<<	endl;
cout<<correlationCoefficient(rank_x, rank_y);
return 0;
}
